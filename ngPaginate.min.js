angular.module("ngPaginate.templates",[]).run(["$templateCache",function(a){a.put("ngPaginate.template.html",'<div class="paginate-wrapper">\r\n  <button class="paginate-btn paginate-btn-first" ng-disabled="vm.paginateHandler.getIsFirstPage()" ng-click="vm.paginateHandler.firstPage()">First</button>\r\n  <button class="paginate-btn paginate-btn-prev" ng-disabled="vm.paginateHandler.getIsFirstPage()" ng-click="vm.paginateHandler.prevPage()">Prev</button>\r\n  <div class="paginate-wrapper-state">\r\n    <span class="paginate-state-current">{{vm.paginateHandler.getPage()+1}}</span>\r\n    <span class="paginate-state-total">{{vm.paginateHandler.getNumPages()}}</span>\r\n  </div>\r\n  <button class="paginate-btn paginate-btn-next" ng-disabled="vm.paginateHandler.getIsLastPage()" ng-click="vm.paginateHandler.nextPage()">Next</button>\r\n  <button class="paginate-btn paginate-btn-last" ng-disabled="vm.paginateHandler.getIsLastPage()" ng-click="vm.paginateHandler.lastPage()">Last</button>\r\n</div>\r\n')}]);
!function(){"use strict";angular.module("ngPaginate",["ngPaginate.templates"])}();
!function(){"use strict";function n(){}angular.module("ngPaginate").controller("ngPaginateCtrl",n),n.$inject=[]}();
!function(){"use strict";function t(t){function a(t,a,e,n){var i=n.visibleCount?+n.visibleCount:10;if("undefined"==typeof n.listData()||"function"!=typeof n.listData())throw"list-data attribute is required\nYou should be passing a reference to a function that returns an array\n";n.paginateHandler=paginate(i||10,n.listData())}var e={link:a,scope:{paginateHandler:"=handler",listData:"&",visibleCount:"@count"},template:t.get("ngPaginate.template.html"),restrict:"EA",controller:"ngPaginateCtrl",controllerAs:"vm",bindToController:!0};return e}angular.module("ngPaginate").directive("paginationNav",t),t.$inject=["$templateCache"]}();
//# sourceMappingURL=ngPaginate.min.js.map